plugins {
	id 'fabric-loom' version '1.4.+'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id 'com.matthewprenger.cursegradle' version '1.4.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/goml.accesswidener")
}

repositories {
	maven { url = "https://maven.fabricmc.net/" }
	maven { url = "https://maven.nucleoid.xyz/" }
	maven { url = 'https://jitpack.io' }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	maven { url 'https://maven.blamejared.com' }
	maven { url "https://maven.shedaniel.me" }
	maven { url "https://api.modrinth.com/maven" }

	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}

	maven {
		url = "https://maven.jamieswhiteshirt.com/libs-release/"
		content {
			includeGroup 'com.jamieswhiteshirt'
		}
	}

	maven { url 'https://maven.ladysnake.org/releases' }

	maven {
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}

	maven { url = "https://maven.resourcefulbees.com/repository/maven-public/" }

	maven { url 'https://repo.mikeprimm.com/' }

	maven { url = "https://repo.mikeprimm.com/" }

	mavenLocal()
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation include("com.jamieswhiteshirt:rtree-3i-lite-fabric:${project.rtree_version}")
	// CCA for data
	modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")

	modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-world:${project.cca_version}")

	// Flight
	modImplementation include("io.github.ladysnake:PlayerAbilityLib:${pal_version}")

	// Dev testing
	//modCompileOnly 'curse.maven:BLAST-349938:3838824'
	//modCompileOnly 'com.github.Ladysnake:BLAST:1.19-SNAPSHOT'
	modCompileOnly files("./modsWithCompat/appliedenergistics2-10.0.0-beta.2.jar")
	modCompileOnly 'vazkii.botania:Botania:1.18.1-427-FABRIC'


	modCompileOnly "maven.modrinth:argonauts:${project.argonauts_version}"
	modCompileOnly "maven.modrinth:resourceful-lib:${project.reslib_version}"

	compileOnly "us.dynmap:DynmapCoreAPI:${project.dynmap_version}"

	// Server side stuff
	modImplementation include("eu.pb4:polymer-core:${project.polymer_version}")
	modImplementation include("eu.pb4:sgui:${project.sgui_version}")
	modImplementation include("eu.pb4:placeholder-api:${project.placeholder_version}")
	modImplementation include("xyz.nucleoid:server-translations-api:${project.stapi_version}")
	modImplementation include("me.lucko:fabric-permissions-api:0.2-SNAPSHOT")
	modImplementation include("eu.pb4:common-protection-api:1.0.0")
}

processResources {
	inputs.property "version", project.version

	filesMatching('fabric.mod.json') {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

jar {
	from "LICENSE"

	from("src/main/resources/data/goml/lang") {
		into("assets/goml/lang")
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven

		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}


curseforge {
	if (System.getenv("CURSEFORGE")) {
		apiKey = System.getenv("CURSEFORGE")

		project {
			id = "572651"
			releaseType = "release"
			changelog = System.getenv("CHANGELOG")
			changelogType = "markdown"
			addGameVersion((project.minecraft_version.contains("-") ? ((String) project.minecraft_version.split("-")[0] + "-Snapshot") : project.minecraft_version))
			addGameVersion "Fabric"
			addGameVersion "Quilt"
			mainArtifact(remapJar)

			afterEvaluate {
				uploadTask.dependsOn("remapJar")
			}
		}

		remapJar {
			finalizedBy project.tasks.curseforge
		}
	}

	options {
		forgeGradleIntegration = false
	}


}

if (System.getenv("MODRINTH")) {
	modrinth {
		token = System.getenv("MODRINTH")
		projectId = 'j5niDupl'
		versionNumber = "" + version

		changelog = System.getenv("CHANGELOG")
		// On fabric, use 'remapJar' instead of 'jar'
		uploadFile = remapJar
		gameVersions = [((String) project.minecraft_version)]
		loaders = ["fabric", "quilt"]
	}

	remapJar {
		finalizedBy project.tasks.modrinth
	}
}